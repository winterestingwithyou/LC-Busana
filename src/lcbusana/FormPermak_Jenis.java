/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lcbusana;

import database.DataPermakBusana;
import decorationcomponent.RoundedButton;
import decorationcomponent.RoundedPanel;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Image;
import java.util.List;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Raden Ayu HIkmah R
 */
public class FormPermak_Jenis extends javax.swing.JPanel {
    private Layout main;
    /**
     * Creates new form PermakBusana2
     */
    
    public FormPermak_Jenis(JFrame frame) {
        initComponents();
        this.main = (Layout) frame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pnlForm = new RoundedPanel(50);
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtUkuran = new javax.swing.JTextField();
        panelCheckBox = new javax.swing.JPanel();
        cbMl = new javax.swing.JCheckBox();
        cbMc = new javax.swing.JCheckBox();
        cbMp = new javax.swing.JCheckBox();
        cbMr = new javax.swing.JCheckBox();
        cbMa = new javax.swing.JCheckBox();
        cbBsrP = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        btnSelanjutnya = new RoundedButton(10);
        btnSebelumnya = new RoundedButton(10);

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Vladimir Script", 1, 36)); // NOI18N
        jLabel1.setText("Permak Busana (Jenis Permak)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        add(jPanel1, gridBagConstraints);

        pnlForm.setBackground(new java.awt.Color(207, 183, 146));
        pnlForm.setBorder(javax.swing.BorderFactory.createEmptyBorder(40, 40, 40, 40));
        pnlForm.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Jenis Perbaikan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnlForm.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Ukuran Setelah Diperbaiki");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnlForm.add(jLabel3, gridBagConstraints);

        txtUkuran.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtUkuran.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUkuranKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnlForm.add(txtUkuran, gridBagConstraints);

        panelCheckBox.setOpaque(false);
        panelCheckBox.setLayout(new java.awt.GridLayout(0, 2, 5, 5));

        cbMl.setBackground(new java.awt.Color(207, 183, 146));
        cbMl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cbMl.setText("Memendekkan Lengan");
        cbMl.setFocusPainted(false);
        panelCheckBox.add(cbMl);

        cbMc.setBackground(new java.awt.Color(207, 183, 146));
        cbMc.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cbMc.setText("Memendekkan Celana/Rok");
        cbMc.setFocusPainted(false);
        panelCheckBox.add(cbMc);

        cbMp.setBackground(new java.awt.Color(207, 183, 146));
        cbMp.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cbMp.setText("Mengecilkan Pakaian");
        cbMp.setFocusPainted(false);
        panelCheckBox.add(cbMp);

        cbMr.setBackground(new java.awt.Color(207, 183, 146));
        cbMr.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cbMr.setText("Mengganti Resleting/Kancing");
        cbMr.setFocusPainted(false);
        panelCheckBox.add(cbMr);

        cbMa.setBackground(new java.awt.Color(207, 183, 146));
        cbMa.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cbMa.setText("Menambah Aplikasi");
        cbMa.setFocusPainted(false);
        panelCheckBox.add(cbMa);

        cbBsrP.setBackground(new java.awt.Color(207, 183, 146));
        cbBsrP.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cbBsrP.setText("Membesarkan Pakaian");
        cbBsrP.setFocusPainted(false);
        panelCheckBox.add(cbBsrP);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnlForm.add(panelCheckBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 20, 20);
        add(pnlForm, gridBagConstraints);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridBagLayout());

        btnSelanjutnya.setBackground(new java.awt.Color(207, 183, 146));
        btnSelanjutnya.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSelanjutnya.setText("Berikutnya>");
        btnSelanjutnya.setBorderPainted(false);
        btnSelanjutnya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelanjutnyaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 80);
        jPanel3.add(btnSelanjutnya, gridBagConstraints);

        btnSebelumnya.setBackground(new java.awt.Color(207, 183, 146));
        btnSebelumnya.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSebelumnya.setText("<Sebelumnya");
        btnSebelumnya.setBorderPainted(false);
        btnSebelumnya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSebelumnyaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel3.add(btnSebelumnya, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        add(jPanel3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        ImageIcon icon = new ImageIcon(getClass().getResource("/image/bg-form.png"));
        Image img = icon.getImage();
        g.drawImage(img, 0, 0, getWidth(), getHeight(), this);
    }
    
    private void btnSelanjutnyaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelanjutnyaActionPerformed
        // Ambil nilai dari setiap input field
        String ukuranSetelahDiperbaiki = txtUkuran.getText().trim();
        
        // Validasi apakah ada yang kosong
        if (ukuranSetelahDiperbaiki.isEmpty() || !isAnyCheckboxSelected()) {
            JOptionPane.showMessageDialog(this, "Semua input harus diisi sebelum melanjutkan!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        //Mengambil nilai dari setiap CheckBox
        List<String> daftarJenisPerbaikan = new ArrayList();
        
        if(cbMl.isSelected()){
            daftarJenisPerbaikan.add(cbMl.getText());
        }
        if(cbMp.isSelected()){
            daftarJenisPerbaikan.add(cbMp.getText());
        }
        if(cbMa.isSelected()){
            daftarJenisPerbaikan.add(cbMa.getText());
        }
        if(cbMc.isSelected()){
            daftarJenisPerbaikan.add(cbMc.getText());
        }
        if(cbMr.isSelected()){
            daftarJenisPerbaikan.add(cbMr.getText());
        }
        if(cbBsrP.isSelected()){
            daftarJenisPerbaikan.add(cbBsrP.getText());
        }
        
        //Nilai akhir dari jenis perbaikan dan ukuran
        String jenisPerbaikan = String.join(", ", daftarJenisPerbaikan);
        long ukuran = Long.parseLong(ukuranSetelahDiperbaiki);
        
        // Simpan data
        DataPermakBusana data = DataPermakBusana.getInstance();
        data.setJenisPerbaikan(jenisPerbaikan);
        data.setUkuranSetelahDiperbaiki(ukuran);
        
        // Menghitung biaya berdasarkan field yang dipilih
        hitungBiaya();
        
        // Pindah ke halaman selanjutnya Form Permak (Tambahan)        
        main.ubahPanel("ptambahan");
    }//GEN-LAST:event_btnSelanjutnyaActionPerformed

    private boolean isAnyCheckboxSelected() {                                        
        // Iterasi semua komponen dalam panel atau form untuk cek checkbox
        for (Component comp : panelCheckBox.getComponents()) {
            if (comp instanceof JCheckBox) {
                JCheckBox checkbox = (JCheckBox) comp;
                if (checkbox.isSelected()) {
                    return true;
                }
            }
        }
        return false;
    }
    
    private void hitungBiaya() {         
        DataPermakBusana data = DataPermakBusana.getInstance();
        
        // Iterasi semua komponen dalam panel untuk menghitung checkbox yang dipilih
        for (Component comp : panelCheckBox.getComponents()) {
            if (comp instanceof JCheckBox) {
                JCheckBox checkbox = (JCheckBox) comp;
                if (checkbox.isSelected()) {
                    // Harga + 50.000 untuk setiap jenis permak yang dipilih
                    data.setEstimasiBiaya(data.getEstimasiBiaya() + 50000);
                }
            }  
        }
        //Mengalikan harga permak dengan jumlah Pakaian
        data.setEstimasiBiaya(data.getEstimasiBiaya() * data.getJumlahPakaian());
    }
    
    private void btnSebelumnyaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSebelumnyaActionPerformed
        // Pindah ke halaman Sebelumnya Form Permak
        main.ubahPanel("pmain");
    }//GEN-LAST:event_btnSebelumnyaActionPerformed

    private void txtUkuranKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUkuranKeyTyped
        char c = evt.getKeyChar();
    
        // Jika tombol yang ditekan adalah Backspace, biarkan tanpa validasi
        if (c == KeyEvent.VK_BACK_SPACE) {
            return;
        }

        // Blokir angka, tetapi izinkan huruf dan spasi
        if (!Character.isDigit(c)) {
            evt.consume(); // Mencegah angka masuk
            JOptionPane.showMessageDialog(this, "Teks hanya berupa angka!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtUkuranKeyTyped

    public void clear(){
        txtUkuran.setText(null);
        // Iterasi semua komponen dalam panel atau form untuk cek menghapus pilihan checkbox
        for (Component comp : panelCheckBox.getComponents()) {
            if (comp instanceof JCheckBox) {
                JCheckBox checkbox = (JCheckBox) comp;
                checkbox.setSelected(false);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSebelumnya;
    private javax.swing.JButton btnSelanjutnya;
    private javax.swing.JCheckBox cbBsrP;
    private javax.swing.JCheckBox cbMa;
    private javax.swing.JCheckBox cbMc;
    private javax.swing.JCheckBox cbMl;
    private javax.swing.JCheckBox cbMp;
    private javax.swing.JCheckBox cbMr;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel panelCheckBox;
    private javax.swing.JPanel pnlForm;
    private javax.swing.JTextField txtUkuran;
    // End of variables declaration//GEN-END:variables
}
