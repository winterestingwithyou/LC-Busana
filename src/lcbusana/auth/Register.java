/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lcbusana.auth;

import decorationcomponent.RoundedButton;
import java.awt.Color;
import javax.swing.BorderFactory;
import security.PasswordUtils;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import database.Koneksi;
import java.sql.Statement;
import session.Auth;

/**
 *
 * @author Acer
 */
public class Register extends javax.swing.JPanel {
    private FormAuth fAuth;
    
    /**
     * Creates new form Register
     */
    public Register(FormAuth fAuth) {
        initComponents();
        this.fAuth = fAuth;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lbTitle = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtKonfirmasiPassword = new javax.swing.JPasswordField();
        btnRegister = new RoundedButton(10);
        pnlLogin = new javax.swing.JPanel();
        lblLogin = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridBagLayout());

        lbTitle.setFont(new java.awt.Font("Vladimir Script", 0, 70)); // NOI18N
        lbTitle.setText("Register");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(50, 50, 50, 50);
        add(lbTitle, gridBagConstraints);

        txtUsername.setBackground(new java.awt.Color(255, 255, 255));
        txtUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtUsername.setForeground(new Color(187, 187, 187));
        txtUsername.setText("Username");
        txtUsername.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        txtUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUsernameFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 100, 10, 100);
        add(txtUsername, gridBagConstraints);

        txtPassword.setBackground(new java.awt.Color(255, 255, 255));
        txtPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPassword.setForeground(new Color(187, 187, 187));
        txtPassword.setText("Password");
        txtPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        txtPassword.setEchoChar((char)0);
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswordFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 100, 10, 100);
        add(txtPassword, gridBagConstraints);

        txtKonfirmasiPassword.setBackground(new java.awt.Color(255, 255, 255));
        txtKonfirmasiPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtKonfirmasiPassword.setForeground(new Color(187, 187, 187));
        txtKonfirmasiPassword.setText("Konfirmasi Password");
        txtKonfirmasiPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        txtKonfirmasiPassword.setEchoChar((char)0);
        txtKonfirmasiPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtKonfirmasiPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtKonfirmasiPasswordFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 100, 10, 100);
        add(txtKonfirmasiPassword, gridBagConstraints);

        btnRegister.setBackground(new java.awt.Color(207, 183, 146));
        btnRegister.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnRegister.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister.setText("REGISTER");
        btnRegister.setBorderPainted(false);
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(50, 100, 20, 100);
        add(btnRegister, gridBagConstraints);

        pnlLogin.setOpaque(false);

        lblLogin.setText("Sudah punya akun?");
        pnlLogin.add(lblLogin);

        btnLogin.setBackground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("<HTML><U>Login</U></HTML>");
        btnLogin.setToolTipText("");
        btnLogin.setBorder(null);
        btnLogin.setContentAreaFilled(false);
        btnLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogin.setFocusPainted(false);
        btnLogin.setOpaque(true);
        btnLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLoginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLoginMouseExited(evt);
            }
        });
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        pnlLogin.add(btnLogin);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 0);
        add(pnlLogin, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusGained
        txtUsername.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLUE));
        if(txtUsername.getText().equals("Username")){
            txtUsername.setText("");
            txtUsername.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtUsernameFocusGained

    private void txtUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusLost
        txtUsername.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        if(txtUsername.getText().isEmpty()){
            txtUsername.setText("Username");
            txtUsername.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_txtUsernameFocusLost

    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusGained
        txtPassword.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLUE));
        if(txtPassword.getText().equals("Password")
            && txtPassword.getEchoChar() == (char) 0){
            txtPassword.setText("");
            txtPassword.setEchoChar('*');
            txtPassword.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtPasswordFocusGained

    private void txtPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusLost
        txtPassword.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        if(String.valueOf(txtPassword.getPassword()).isEmpty()){
            txtPassword.setText("Password");
            txtPassword.setEchoChar((char) 0);
            txtPassword.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_txtPasswordFocusLost

    private void btnLoginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseEntered
        btnLogin.setForeground(Color.BLUE);
    }//GEN-LAST:event_btnLoginMouseEntered

    private void btnLoginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseExited
        btnLogin.setForeground(Color.BLACK);
    }//GEN-LAST:event_btnLoginMouseExited

    private void txtKonfirmasiPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKonfirmasiPasswordFocusGained
        txtKonfirmasiPassword.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLUE));
        if(txtKonfirmasiPassword.getText().equals("Konfirmasi Password")
            && txtKonfirmasiPassword.getEchoChar() == (char) 0){
            txtKonfirmasiPassword.setText("");
            txtKonfirmasiPassword.setEchoChar('*');
            txtKonfirmasiPassword.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtKonfirmasiPasswordFocusGained

    private void txtKonfirmasiPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKonfirmasiPasswordFocusLost
        txtKonfirmasiPassword.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        if(String.valueOf(txtKonfirmasiPassword.getPassword()).isEmpty()){
            txtKonfirmasiPassword.setText("Konfirmasi Password");
            txtKonfirmasiPassword.setEchoChar((char) 0);
            txtKonfirmasiPassword.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_txtKonfirmasiPasswordFocusLost

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        fAuth.ubahPanel("Login");
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        String username = txtUsername.getText();
        String password = String.valueOf(txtPassword.getPassword());
        String hashedPassword = PasswordUtils.hashPassword(password);
        String konfirmasiPassword = String.valueOf(txtPassword.getPassword());
        String hashedKonfirmasiPassword = PasswordUtils.hashPassword(konfirmasiPassword);
        
        // lakukan proses Register     
        if(register(username, hashedPassword, hashedKonfirmasiPassword)) {
            fAuth.kembaliKeHalamanUtama();
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private boolean register(String username, String password, String konfirmasiPassword) {
        // Cek apakah password dan konfirmasi password cocok
        if (!password.equals(konfirmasiPassword)) {
            JOptionPane.showMessageDialog(null, "Konfirmasi password tidak cocok", "Registrasi Gagal", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        String checkQuery = "SELECT username FROM pelanggan WHERE username = ?";
        String insertQuery = "INSERT INTO pelanggan (username, password) VALUES (?, ?)";

        try (Connection conn = Koneksi.getConnection();
             PreparedStatement checkStmt = conn.prepareStatement(checkQuery)) {

            checkStmt.setString(1, username);
            try (ResultSet rs = checkStmt.executeQuery()) {
                if (rs.next()) {
                    // Username sudah digunakan
                    JOptionPane.showMessageDialog(null, "Username sudah digunakan", "Registrasi Gagal", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            }

            // Jika username belum digunakan, lakukan insert
            try (PreparedStatement insertStmt = conn.prepareStatement(insertQuery, Statement.RETURN_GENERATED_KEYS)) {
                insertStmt.setString(1, username);
                insertStmt.setString(2, password); // diasumsikan sudah di-hash sebelum dikirim ke fungsi ini

                int result = insertStmt.executeUpdate();
                if (result > 0) {
                    //Registrasi Berhasil
                    Auth auth = Auth.getInstance();
                    auth.setAuth(true);
                    
                    ResultSet rs = insertStmt.getGeneratedKeys();
                    if (rs.next()) {
                        auth.setAuthUser(rs.getInt(1));
                    }
                    
                    JOptionPane.showMessageDialog(null, "Registrasi berhasil", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    return true;
                } else {
                    JOptionPane.showMessageDialog(null, "Registrasi gagal, tidak dapat menyimpan data", "Gagal", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat registrasi:\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    public void setDefaultField(){
        txtUsername.setText("Username");
        txtPassword.setText("Password");
        txtKonfirmasiPassword.setText("Konfirmasi Password");
        txtPassword.setEchoChar((char) 0);
        txtKonfirmasiPassword.setEchoChar((char) 0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPasswordField txtKonfirmasiPassword;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
