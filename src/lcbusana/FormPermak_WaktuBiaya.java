/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lcbusana;

import database.DataPermakBusana;
import decorationcomponent.RoundedButton;
import decorationcomponent.RoundedPanel;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.JFrame;
import java.awt.event.*;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import session.Auth;
import tools.FileIO;
import tools.Selector;

/**
 *
 * @author Admin
 */
public class FormPermak_WaktuBiaya extends javax.swing.JPanel {
    private Layout main;
    
    /**
     * Creates new form wbPermak
     */
    public FormPermak_WaktuBiaya(JFrame frame) {
        initComponents();
        this.main = (Layout) frame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        metode = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        pnlForm = new RoundedPanel(50);
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtBiaya = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        rbtntf = new javax.swing.JRadioButton();
        rbtntunai = new javax.swing.JRadioButton();
        rbtnDP = new javax.swing.JRadioButton();
        jsTanggal = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        btnSebelumnya = new RoundedButton(10);
        btnBerikutnya = new RoundedButton(10);

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(900, 500));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(new java.awt.GridBagLayout());

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(new java.awt.Font("Vladimir Script", 1, 36)); // NOI18N
        jLabel5.setText("Permak Busana (Waktu dan Biaya)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        jPanel2.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        add(jPanel2, gridBagConstraints);

        pnlForm.setBackground(new java.awt.Color(207, 183, 146));
        pnlForm.setBorder(javax.swing.BorderFactory.createEmptyBorder(40, 40, 40, 40));
        pnlForm.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Tanggal Pengambilan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnlForm.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Biaya");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnlForm.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Metode Pembayaran");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnlForm.add(jLabel4, gridBagConstraints);

        txtBiaya.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtBiaya.setName(""); // NOI18N
        txtBiaya.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBiayaKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnlForm.add(txtBiaya, gridBagConstraints);

        jPanel4.setOpaque(false);
        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        rbtntf.setBackground(new java.awt.Color(207, 183, 146));
        metode.add(rbtntf);
        rbtntf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtntf.setText("Transfer");
        rbtntf.setFocusPainted(false);
        jPanel4.add(rbtntf);

        rbtntunai.setBackground(new java.awt.Color(207, 183, 146));
        metode.add(rbtntunai);
        rbtntunai.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtntunai.setText("Tunai");
        rbtntunai.setFocusPainted(false);
        jPanel4.add(rbtntunai);

        rbtnDP.setBackground(new java.awt.Color(207, 183, 146));
        metode.add(rbtnDP);
        rbtnDP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtnDP.setText("DP");
        rbtnDP.setFocusPainted(false);
        jPanel4.add(rbtnDP);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnlForm.add(jPanel4, gridBagConstraints);

        jsTanggal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jsTanggal.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), new java.util.Date(), null, java.util.Calendar.DAY_OF_MONTH));
        jsTanggal.setEditor(new javax.swing.JSpinner.DateEditor(jsTanggal, "d/M/yyyy"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnlForm.add(jsTanggal, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 20, 20);
        add(pnlForm, gridBagConstraints);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridBagLayout());

        btnSebelumnya.setBackground(new java.awt.Color(207, 183, 146));
        btnSebelumnya.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSebelumnya.setText("< Sebelumnya");
        btnSebelumnya.setBorderPainted(false);
        btnSebelumnya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSebelumnyaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanel3.add(btnSebelumnya, gridBagConstraints);

        btnBerikutnya.setBackground(new java.awt.Color(207, 183, 146));
        btnBerikutnya.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnBerikutnya.setText("Berikutnya >");
        btnBerikutnya.setBorderPainted(false);
        btnBerikutnya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBerikutnyaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 80);
        jPanel3.add(btnBerikutnya, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        add(jPanel3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        ImageIcon icon = new ImageIcon(getClass().getResource("/image/bg-form.png"));
        Image img = icon.getImage();
        g.drawImage(img, 0, 0, getWidth(), getHeight(), this);
    }
    
    private void btnSebelumnyaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSebelumnyaActionPerformed
        main.ubahPanel("ptambahan");
    }//GEN-LAST:event_btnSebelumnyaActionPerformed

    private void btnBerikutnyaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBerikutnyaActionPerformed
        // Ambil nilai dari setiap input field
        Date tanggal = (Date) jsTanggal.getValue();
        String biayaDimasukkan = txtBiaya.getText().trim();
        long biaya = biayaDimasukkan.equals("") ? 0 : Long.parseLong(biayaDimasukkan);
        String metode = "";
        
        if (rbtntf.isSelected()) {
            metode = "Transfer";
        } else if (rbtntunai.isSelected()){
            metode = "Tunai";
        } else if (rbtnDP.isSelected()){
            metode = "DP";
        }
        
        // Konversi tanggal ke LocalDate
        LocalDate tanggalDipilih = tanggal.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate hariIni = LocalDate.now();

        // Validasi input kosong (biaya dan metode)
        if (biaya <= 0 || metode.equals("")) {
            JOptionPane.showMessageDialog(this, "Semua input harus diisi sebelum melanjutkan!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        } 
        
        // Validasi tanggal hanya jika bukan dalam mode edit
        if (!main.isOnEdit()) {
            if (tanggalDipilih.equals(hariIni) || tanggalDipilih.isBefore(hariIni)) {
                JOptionPane.showMessageDialog(this, "Tanggal harus setelah hari ini!", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        
        // Lakukan Operasi  
        //Cek Apakah sedang mengedit
        if(main.isOnEdit()){
            // Perbarui Data
            if(updateDataPermakBusana(tanggal, biaya, metode)){
                if(simpanGambar()){
                    // Selesai Edit, kembali kembali ke Pesanan
                    main.ubahPanel("pesanan");                    
                }
            }   
        } else {
            // Simpan data
            if(simpanDataPermakBusana(tanggal, biaya, metode)){
                if(simpanGambar()){
                    // Selesai, kembali ke form dashboatd
                    main.ubahPanel("dashboard");                     
                }
            }
        }
    }//GEN-LAST:event_btnBerikutnyaActionPerformed

    private void txtBiayaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBiayaKeyTyped
        char c = evt.getKeyChar();
    
        // Jika tombol yang ditekan adalah Backspace, biarkan tanpa validasi
        if (c == KeyEvent.VK_BACK_SPACE) {
            return;
        }

        // Blokir angka, tetapi izinkan huruf dan spasi
        if (!Character.isDigit(c)) {
            evt.consume(); // Mencegah angka masuk
            JOptionPane.showMessageDialog(this, "Teks hanya berupa angka!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtBiayaKeyTyped

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        //disable beberapa field jika sedang mengedit
        if(main.isOnEdit()){
            jsTanggal.setEnabled(false);
        } else {
            jsTanggal.setEnabled(true);
        }
    }//GEN-LAST:event_formComponentShown

    public void clear(){
        jsTanggal.setValue(new Date());
        txtBiaya.setText(null);
        metode.clearSelection();
    }
    
    void isiDataEdit() {
        DataPermakBusana data = DataPermakBusana.getInstance();
        jsTanggal.setValue(data.getTanggalPengambilan());
        txtBiaya.setText(Integer.toString((int) data.getEstimasiBiaya()));
        Selector.selectRadioByActionCommand(metode, data.getMetodePembayaran());
    }
    
    private boolean simpanDataPermakBusana(Date tanggal, long biaya, String metode) {        
        try {
            DataPermakBusana data = DataPermakBusana.getInstance();
            data.setTanggalPengambilan(tanggal);
            data.setEstimasiBiaya(biaya);
            data.setMetodePembayaran(metode);
            data.setIdPelanggan(Auth.getInstance().getAuthUser());
            data.save();
            
            return true;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal Menyimpan Data \n" + e, "Terjadi Kesalahan", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private boolean updateDataPermakBusana(Date tanggal, long biaya, String metode) {        
        try {
            DataPermakBusana data = DataPermakBusana.getInstance();
            data.setTanggalPengambilan(tanggal);
            data.setEstimasiBiaya(biaya);
            data.setMetodePembayaran(metode);
            data.update();
            
            return true;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal Memperbarui Data \n" + e, "Terjadi Kesalahan", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private boolean simpanGambar(){
        try{
            //Simpan file gambar
            DataPermakBusana data = DataPermakBusana.getInstance();
            String idPermakBusana = String.valueOf(data.getIdPermakBusana());
            String gambarLokal = data.getFotoPakaian();
            String gambarBaru = FileIO.simpanFile("attachments/PermakBusana", idPermakBusana, gambarLokal);
            data.setFotoPakaian(gambarBaru);
            data.updateFotoPakaian();
            
            return true;
        } catch(SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal Menyimpan Gambar \n" + e, "Terjadi Kesalahan", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBerikutnya;
    private javax.swing.JButton btnSebelumnya;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSpinner jsTanggal;
    private javax.swing.ButtonGroup metode;
    private javax.swing.JPanel pnlForm;
    private javax.swing.JRadioButton rbtnDP;
    private javax.swing.JRadioButton rbtntf;
    private javax.swing.JRadioButton rbtntunai;
    private javax.swing.JTextField txtBiaya;
    // End of variables declaration//GEN-END:variables
}
